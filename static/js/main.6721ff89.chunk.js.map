{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["Filters","TodoList","filteredTodos","isCheck","setIsCheck","setUserId","checkId","setCheckId","className","map","todo","classNames","id","completed","title","type","onClick","userId","TodoFilter","todos","appliedFilter","setFilteredTodos","setAppliedFilter","useState","search","setSearch","setFilteredTodosCallback","useCallback","updatedFilteredTodos","useEffect","Active","filter","Completed","toLowerCase","includes","onChange","event","selectedFilter","target","value","All","placeholder","newSearch","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","selectedTodo","find","getUser","userData","href","email","name","App","setTodos","loading","setLoading","finally","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6721ff89.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\n\nenum Filters {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\ntype Props = {\n  filteredTodos: Todo[];\n  todos: Todo[];\n  appliedFilter: Filters;\n  setFilteredTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  setAppliedFilter: React.Dispatch<React.SetStateAction<Filters>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  appliedFilter,\n  filteredTodos,\n  setFilteredTodos,\n  setAppliedFilter,\n}) => {\n  const [search, setSearch] = useState('');\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedFilter = event.target.value as Filters;\n\n    setAppliedFilter(selectedFilter);\n  };\n\n  const setFilteredTodosCallback = useCallback((updatedFilteredTodos) => {\n    setFilteredTodos(updatedFilteredTodos);\n  }, [setFilteredTodos]);\n\n  useEffect(() => {\n    let updatedFilteredTodos = todos;\n\n    if (appliedFilter === Filters.Active) {\n      updatedFilteredTodos = todos.filter((todo) => !todo.completed);\n    } else if (appliedFilter === Filters.Completed) {\n      updatedFilteredTodos = todos.filter((todo) => todo.completed);\n    }\n\n    if (search) {\n      updatedFilteredTodos = updatedFilteredTodos.filter(\n        (todo) => todo.title.toLowerCase().includes(search.toLowerCase()),\n      );\n    }\n\n    setFilteredTodosCallback(updatedFilteredTodos);\n  }, [appliedFilter, todos, search, setFilteredTodosCallback]);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newSearch = event.target.value;\n\n    setSearch(newSearch);\n    let updatedFilteredTodos = todos;\n\n    if (appliedFilter === Filters.Active) {\n      updatedFilteredTodos = todos.filter((todo) => !todo.completed);\n    } else if (appliedFilter === Filters.Completed) {\n      updatedFilteredTodos = todos.filter((todo) => todo.completed);\n    }\n\n    if (newSearch) {\n      updatedFilteredTodos = updatedFilteredTodos.filter(\n        (todo) => todo.title.toLowerCase().includes(newSearch.toLowerCase()),\n      );\n    }\n\n    setFilteredTodos(updatedFilteredTodos);\n  };\n\n  const handleDelete = () => {\n    setSearch('');\n    setFilteredTodos(filteredTodos);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option value={Filters.All}>All</option>\n            <option value={Filters.Active}>Active</option>\n            <option value={Filters.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {search && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear Search\"\n              onClick={handleDelete}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[],\n  isCheck: boolean,\n  setIsCheck: React.Dispatch<React.SetStateAction<boolean>>;\n  setUserId: React.Dispatch<React.SetStateAction<number>>;\n  checkId: number;\n  setCheckId: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  filteredTodos,\n  isCheck,\n  setIsCheck,\n  setUserId,\n  checkId,\n  setCheckId,\n}) => {\n  const handleCheck = (id: number, userId: number) => {\n    setIsCheck(!isCheck);\n    setCheckId(id);\n    setUserId(userId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === checkId },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleCheck(todo.id, todo.userId)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far fa-eye',\n                    { 'far fa-eye-slash': isCheck && checkId === todo.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum Filters {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isCheck, setIsCheck] = useState(false);\n  const [appliedFilter, setAppliedFilter] = useState(Filters.All);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [userId, setUserId] = useState(0);\n  const [checkId, setCheckId] = useState(0);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then((todo) => {\n        setTodos(todo);\n        setFilteredTodos(todo);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                appliedFilter={appliedFilter}\n                filteredTodos={filteredTodos}\n                setFilteredTodos={setFilteredTodos}\n                setAppliedFilter={setAppliedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  checkId={checkId}\n                  setCheckId={setCheckId}\n                  setUserId={setUserId}\n                  filteredTodos={filteredTodos}\n                  isCheck={isCheck}\n                  setIsCheck={setIsCheck}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        setCheckId={setCheckId}\n        isCheck={isCheck}\n        setIsCheck={setIsCheck}\n        filteredTodos={filteredTodos}\n        checkId={checkId}\n        userId={userId}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  isCheck: boolean;\n  setCheckId: React.Dispatch<React.SetStateAction<number>>;\n  setIsCheck: React.Dispatch<React.SetStateAction<boolean>>;\n  filteredTodos: Todo[];\n  checkId: number;\n  userId: number;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  isCheck,\n  setCheckId,\n  setIsCheck,\n  filteredTodos,\n  checkId,\n  userId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const selectedTodo = filteredTodos.find((todo) => todo.id === checkId);\n\n  useEffect(() => {\n    if (isCheck && checkId > 0) {\n      getUser(userId)\n        .then((userData) => {\n          setUser(userData);\n        });\n    }\n  }, [userId, checkId, isCheck]);\n\n  const handleModalClose = () => {\n    setUser(null);\n    setIsCheck(false);\n    setCheckId(0);\n  };\n\n  return isCheck ? (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {checkId}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleModalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  ) : null;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}